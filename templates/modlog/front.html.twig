{% extends 'base.html.twig' %}
{% set V_TRUE = constant('App\\Controller\\User\\ThemeSettingsController::TRUE') %}
{% set MBIN_MODERATION_LOG_SHOW_USER_AVATARS = constant('App\\Controller\\User\\ThemeSettingsController::MBIN_MODERATION_LOG_SHOW_USER_AVATARS') %}
{% set showAvatars = app.request.cookies.get(MBIN_MODERATION_LOG_SHOW_USER_AVATARS) is same as V_TRUE %}
{% set MBIN_MODERATION_LOG_SHOW_MAGAZINE_ICONS = constant('App\\Controller\\User\\ThemeSettingsController::MBIN_MODERATION_LOG_SHOW_MAGAZINE_ICONS') %}
{% set showIcons = app.request.cookies.get(MBIN_MODERATION_LOG_SHOW_MAGAZINE_ICONS) is same as V_TRUE %}
{% set MBIN_MODERATION_LOG_SHOW_NEW_ICONS = constant('App\\Controller\\User\\ThemeSettingsController::MBIN_MODERATION_LOG_SHOW_NEW_ICONS') %}
{% set showNewIcons = app.request.cookies.get(MBIN_MODERATION_LOG_SHOW_NEW_ICONS, V_TRUE) is same as V_TRUE %}
{% use 'modlog/_blocks.html.twig' %}

{% set hasMagazine = magazine is defined and magazine ? true : false %}

{%- block title -%}
    {% if hasMagazine %}
        {{- 'mod_log'|trans }} - {{ magazine.title }} - {{ parent() -}}
    {% else %}
        {{- 'mod_log'|trans }} - {{ parent() -}}
    {% endif %}
{%- endblock -%}

{% block mainClass %}page-modlog{% endblock %}

{% block header_nav %}
{% endblock %}

{% block sidebar_top %}
{% endblock %}

{% block body %}
    <h1>{{ 'mod_log'|trans }}</h1>
    <div class="alert alert__danger">
        <p>{{ 'mod_log_alert'|trans }}</p>
    </div>

    {{ form_start(form) }}
    <div>
        {{ form_widget(form.magazine, {'attr': {'onchange': '(function (e){ e.target.form.submit();})(event)'}}) }}
    </div>
    <div class="flex">
        <div class="flex-item">
            {{ form_widget(form.types) }}
        </div>
        <div>
            <button class="btn btn__primary small" type="submit" title="{{ 'search'|trans }}" aria-label="{{ 'search'|trans }}">
                <i class="fa-solid fa-magnifying-glass" aria-hidden="true"></i>
            </button>
        </div>
    </div>
    {{ form_end(form) }}

    {% for log in logs %}
        <div class="section section--small log">
            <div>
                {%- with {
                    log: log,
                    showMagazine: not hasMagazine,
                    showAvatars: showAvatars,
                    showIcons: showIcons,
                    showNewIcons: showNewIcons,
                } only -%}
                    {{ block(log.type) }}
                {%- endwith -%}
            </div>
            <span>{{ component('date', {date: log.createdAt}) }}</span>
        </div>
    {% endfor %}
    {% if(logs.haveToPaginate is defined and logs.haveToPaginate) %}
        {{ pagerfanta(logs, null, {'pageParameter':'[p]'}) }}
    {% endif %}
    {% if not logs|length %}
        <aside class="section section--muted">
            <p>{{ 'empty'|trans }}</p>
        </aside>
    {% endif %}
{% endblock %}
