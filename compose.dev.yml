services:
  www:
    volumes:
      - caddy_config:/config
      - caddy_data:/data
      - ./:/var/www/mbin
    depends_on:
      node:
        condition: service_completed_successfully

  # Builds the nodejs application
  node:
    image: "node:22.5.1-alpine3.20"
    command: docker/node/build.sh
    container_name: node-builder
    entrypoint:
      - sh
      - "-c"
    working_dir: /var/www/mbin
    depends_on:
      php:
        condition: service_healthy
    networks:
      - mbin_external_network
    volumes:
      - ./:/var/www/mbin/

  php:
    # Builds the Docker image from scratch
    build:
      target: dev
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./docker/php/entrypoint.sh:/entrypoint.sh
      - ./:/var/www/mbin/
      - ./docker/php/conf.d/app.ini:/usr/local/etc/php/conf.d/app.ini
      - ./docker/php/conf.d/app.dev.ini:/usr/local/etc/php/conf.d/app.dev.ini
      - ./docker/php/php-fpm.d/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
    env_file:
      - .env.dev_docker


  messenger:
    # Builds the Docker image from scratch
    build:
      target: dev
    command: bin/console -vvvv messenger:consume --all --time-limit=3600
    volumes:
      - ./:/var/www/mbin/
    env_file:
      - .env.dev_docker

  redis:
    volumes:
      - redis:/data
    env_file:
      - .env.dev_docker

  db:
    # Allow connecting to the db from the localhost for debugging
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - .env.dev_docker

  rabbitmq:
    env_file:
      - .env.dev_docker
    volumes:
      - rabbitmq:/var/lib/rabbitmq

volumes:
  caddy_config:
  caddy_data:
  postgres:
  rabbitmq:
  redis:
