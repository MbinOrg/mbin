ServerName 127.0.0.1
<VirtualHost *:8080>
    # The ServerName directive sets the request scheme, hostname and port that
    # the server uses to identify itself. This is used when creating
    # redirection URLs. In the context of virtual hosts, the ServerName
    # specifies what hostname must appear in the request's Host: header to
    # match this virtual host. For the default virtual host (this file) this
    # value is not decisive as it is used as a last resort host regardless.
    # However, you must set it for any further virtual host explicitly.
    #ServerName www.example.com

    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/html/public

    # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
    # error, crit, alert, emerg.
    # It is also possible to configure the loglevel for particular
    # modules, e.g.
    #LogLevel info ssl:warn

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined

    # For most configuration files from conf-available/, which are
    # enabled or disabled at a global level, it is possible to
    # include a line for only one particular virtual host. For example the
    # following line enables the CGI configuration for this host only
    # after it has been globally disabled with "a2disconf".
    #Include conf-available/serve-cgi-bin.conf

    <Directory /var/www/html/public>
        AllowOverride None
        Require all granted
        FallbackResource /index.php
        DirectoryIndex index.php

        # Disabling MultiViews prevents unwanted negotiation, e.g. "/index" should not resolve
        # to the front controller "/index.php" but be rewritten to "/index.php/index".
        <IfModule mod_negotiation.c>
            Options -MultiViews
        </IfModule>

        <IfModule mod_rewrite.c>
            RewriteEngine On

            # This RewriteRule is used to dynamically discover the RewriteBase path.
            # See https://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewriterule
            # Here we will compare the stripped per-dir path *relative to the filesystem
            # path where the .htaccess file is read from* with the URI of the request.
            #
            # If a match is found, the prefix path is stored into an ENV var that is later
            # used to properly prefix the URI of the front controller index.php.
            # This is what makes it possible to host a Symfony application under a subpath,
            # such as example.com/subpath

            # The convoluted rewrite condition means:
            #   1. Match all current URI in the RewriteRule and backreference it using $0
            #   2. Strip the request uri the per-dir path and use ir as REQUEST_URI.
            #      This is documented in https://bit.ly/3zDm3SI ("What is matched?")
            #   3. Evaluate the RewriteCond, assuming your DocumentRoot is /var/www/html,
            #      this .htaccess is in the /var/www/html/public dir and your request URI
            #      is /public/hello/world:
            #      * strip per-dir prefix: /var/www/html/public/hello/world -> hello/world
            #      * applying pattern '.*' to uri 'hello/world'
            #      * RewriteCond: input='/public/hello/world::hello/world' pattern='^(/.+)/(.*)::\\2$' => matched
            #   4. Execute the RewriteRule:
            #      * The %1 in the RewriteRule flag E=BASE:%1 refers to the first group captured in the RewriteCond ^(/.+)/(.*)
            #      * setting env variable 'BASE' to '/public'
            RewriteCond %{REQUEST_URI}::$0 ^(/.+)/(.*)::\2$
            RewriteRule .* - [E=BASE:%1]

            # Sets the HTTP_AUTHORIZATION header removed by Apache
            RewriteCond %{HTTP:Authorization} .+
            RewriteRule ^ - [E=HTTP_AUTHORIZATION:%0]

            # Removes the /index.php/ part from a URL, if present
            RewriteCond %{ENV:REDIRECT_STATUS} ^$
            RewriteRule ^index\.php(?:/(.*)|$) %{ENV:BASE}/$1 [R=301,L]

            # If the requested filename exists, simply serve it.
            # Otherwise rewrite all other queries to the front controller.
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^ %{ENV:BASE}/index.php [L]
        </IfModule>
    </Directory>
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
