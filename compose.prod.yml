services:
  www:
    # To use a prebuilt image from ghcr.io comment out the "image" and "pull_policy" lines
    # You can also a tag eg.: "v1.0.0" instead of "latest"
    #image: "ghcr.io/mbinorg/mbin:latest-caddy"
    #pull_policy: never
    ports:
      - 80:80
    volumes:
      - ./docker/storage/caddy_config:/config
      - ./docker/storage/caddy_data:/data
      - ./docker/storage/mbin/public:${MBIN_HOME}/public:ro  # Shared volume for php container to write into
    environment:
      - SERVER_NAME=:80 # the address that the web server binds
      - PHP_FASTCGI_HOST=php:9000 # caddy forward traffic to this host via fastcgi
      - MERCURE_PUBLISHER_JWT_KEY=$MERCURE_JWT_SECRET
      - MERCURE_SUBSCRIBER_JWT_KEY=$MERCURE_JWT_SECRET
    depends_on:
      - php

  php:
    # To use a prebuilt image from ghcr.io comment out the "image" and "pull_policy" lines
    # You can also a tag eg.: "v1.0.0" instead of "latest"
    #image: "ghcr.io/mbinorg/mbin:latest"
    #pull_policy: never
    volumes:
      - ./docker/storage/mbin:$MBIN_HOME
    # If you want to change configs locally, without rebuilding the image use:
    #  - ../docker/config:/var/www/mbin/config
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - rabbitmq

  messenger:
    # To use a prebuilt image from ghcr.io comment out the "image" and "pull_policy" lines
    # You can also a tag eg.: "v1.0.0" instead of "latest"
    #image: "ghcr.io/mbinorg/mbin:latest"
    #pull_policy: never
    restart: unless-stopped
    command: bin/console -vvvv messenger:consume --all --time-limit=3600
    deploy:
      mode: replicated
      replicas: 1  # Increase this for better parallelism
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep 'messenger[:]consume' || exit 1"]
    networks:
      - mbin_external_network
    volumes:
      - ./docker/storage/mbin:$MBIN_HOME
    # If you want to change configs locally, without rebuilding the image use:
    #  - ../docker/config:/var/www/mbin/config
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - rabbitmq

  redis:
    image: redis:alpine
    container_name: mbin-redis
    restart: unless-stopped
    networks:
      - mbin_external_network
    command: /bin/sh -c "redis-server --requirepass $${REDIS_PASSWORD}"
    volumes:
      - ./docker/storage/redis:/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  db:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: mbin-db
    restart: unless-stopped
    networks:
      - mbin_external_network
    volumes:
      - ./docker/storage/postgres:/var/lib/postgresql/data
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3.13.6-management-alpine
    container_name: mbin-rabbitmq
    restart: unless-stopped
    networks:
      - mbin_external_network
    env_file:
      - .env
    volumes:
      - ./docker/storage/rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672

  # Add your favorite reverse proxy (e.g nginx) which accept incoming HTTPS
  # traffic and forward to http://www:80
  #nginx:
  #  image: nginx
  #  container_name: mbin-nginx
  #  networks:
  #    - mbin_external_network
  #  ports:
  #    - 443:443
  #  volumes:
  #    - ./docker/nginx.conf:/etc/nginx/nginx.conf

  # Example of a SMTP docker service
  # More info: https://hub.docker.com/r/ixdotai/smtp
  #mailserver:
  #  image: ixdotai/smtp:latest
  #  networks:
  #    - mbin_external_network
  #  environment:
  #    - SMARTHOST_ADDRESS=mail.mysmtp.com
  #    - SMARTHOST_PORT=587
  #    - SMARTHOST_USER=myuser
  #    - SMARTHOST_PASSWORD=secret
  #    - SMARTHOST_ALIASES=*.mysmtp.com

networks:
  mbin_external_network:
