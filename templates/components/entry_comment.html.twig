{%- set V_TRUE = constant('App\\Controller\\User\\ThemeSettingsController::TRUE') -%}
{%- set V_FALSE = constant('App\\Controller\\User\\ThemeSettingsController::FALSE') -%}
{%- set V_TREE = constant('App\\Controller\\User\\ThemeSettingsController::TREE') -%}

{%- set SHOW_PREVIEW = app.request.cookies.get(constant('App\\Controller\\User\\ThemeSettingsController::KBIN_ENTRIES_SHOW_PREVIEW'), V_FALSE) -%}
{%- set DYNAMIC_LISTS = app.request.cookies.get(constant('App\\Controller\\User\\ThemeSettingsController::KBIN_GENERAL_DYNAMIC_LISTS'), V_FALSE) -%}
{%- set VIEW_STYLE = app.request.cookies.get(constant('App\\Controller\\User\\ThemeSettingsController::ENTRY_COMMENTS_VIEW'), V_TREE) -%}
{%- set SHOW_USER_FULLNAME = app.request.cookies.get(constant('App\\Controller\\User\\ThemeSettingsController::MBIN_SHOW_USER_DOMAIN'), V_FALSE)  -%}
{%- set SHOW_MAGAZINE_FULLNAME = app.request.cookies.get(constant('App\\Controller\\User\\ThemeSettingsController::MBIN_SHOW_MAGAZINE_DOMAIN'), V_FALSE)  -%}

{% if not app.user or (app.user and not app.user.isBlocked(comment.user)) %}
    {% if comment.visibility is same as 'private' and (not app.user or not app.user.isFollower(comment.user)) %}
        <div class="section section--small {{ 'comment-level--' ~ this.getLevel() }}">
            Private
        </div>
    {% else %}
        <blockquote{{ attributes.defaults({
            class: html_classes('section comment entry-comment subject', 'comment-level--' ~ this.getLevel(), {
                'own': app.user and comment.isAuthor(app.user),
                'author': comment.isAuthor(comment.entry.user),
                'show-preview': SHOW_PREVIEW is same as V_TRUE and not comment.isAdult,
            })}).without('id') }}
                id="entry-comment-{{ comment.id }}"
                data-controller="comment subject mentions comment-collapse html-refresh"
                data-comment-collapse-depth-value="{{ level }}"
                data-subject-parent-value="{{ comment.parent ? comment.parent.id : '' }}"
                data-action="{{- DYNAMIC_LISTS is same as V_TRUE ? 'notifications:Notification@window->subject#notification' : '' -}}">
            <header>
                {% if comment.isAdult %}<span class="badge danger">18+</span>{% endif %}
                {{ component('user_inline', {user: comment.user, showAvatar: false, showNewIcon: true, fullName: SHOW_USER_FULLNAME is same as V_TRUE}) }}

                {% if comment.entry.user.id() is same as comment.user.id() %}
                    <span class="user-badge">{{ 'user_badge_op'|trans }}</span>
                {% endif %}

                {% if (comment.user.type) == "Service" %}
                    <span class="user-badge">{{ 'user_badge_bot'|trans }}</span>
                {% endif %}

                {% if comment.user.admin() %}
                    <span class="user-badge">{{ 'user_badge_admin'|trans }}</span>
                {% elseif comment.user.moderator() %}
                    <span class="user-badge">{{ 'user_badge_global_moderator'|trans }}</span>
                {% elseif comment.magazine.userIsModerator(comment.user) %}
                    <span class="user-badge">{{ 'user_badge_moderator'|trans }}</span>
                {% endif %}
                <span>, </span>

                {% if dateAsUrl %}
                    <a href="{{ entry_comment_view_url(comment) }}#{{ get_url_fragment(comment) }}"
                       class="link-muted">{{ component('date', {date: comment.createdAt}) }}</a>
                {% else %}
                    {{ component('date', {date: comment.createdAt}) }}
                {% endif %}
                {{ component('date_edited', {createdAt: comment.createdAt, editedAt: comment.editedAt}) }}
                {% if showMagazineName %}{{ 'to'|trans }} {{ component('magazine_inline', {magazine: comment.magazine, fullName: SHOW_MAGAZINE_FULLNAME is same as V_TRUE}) }}{% endif %}
                {% if showEntryTitle %}{{ 'in'|trans }} {{ component('entry_inline', {entry: comment.entry}) }}{% endif %}
                {% if comment.lang is not same as app.request.locale and comment.lang is not same as kbin_default_lang() %}
                    <small hidden class="badge-lang">{{ comment.lang|language_name }}</small>
                {% endif %}
            </header>

            {{ component('user_avatar', {
                user: comment.user,
                width: 40,
                height: 40,
                asLink: true
            }) }}

            <div class="content">
                {% if comment.visibility in ['visible', 'private'] or (comment.visibility is same as 'trashed' and this.canSeeTrashed) %}
                    {{ comment.body|markdown|raw }}
                {% elseif(comment.visibility is same as 'trashed') %}
                    <p class="text-muted">&lsqb;<i>{{ 'deleted_by_moderator'|trans }}</i>&rsqb;</p>
                {% elseif(comment.visibility is same as 'soft_deleted') %}
                    <p class="text-muted">&lsqb;<i>{{ 'deleted_by_author'|trans }}</i>&rsqb;</p>
                {% endif %}
            </div>
            <div class="aside">
                {% if comment.visibility in ['visible', 'private'] %}
                    {{ component('vote', { subject: comment }) }}
                {% endif %}
                {{ include('components/_comment_collapse_button.html.twig', {
                    comment: comment,
                    showNested: showNested,
                }) }}
            </div>
            <footer>
                {% if (comment.visibility in ['visible', 'private'] or comment.visibility is same as 'trashed' and this.canSeeTrashed) and comment.image %}
                    {{ include('components/_figure_image.html.twig', {
                        image: comment.image,
                        parent_id: comment.id,
                        is_adult: comment.isAdult,
                        thumb_filter: 'post_thumb',
                        gallery_name: 'ec-%d'|format(comment.id),
                    }) }}
                {% endif %}
                {% if comment.visibility in ['visible', 'private'] %}
                    <menu>
                        <li>
                            <a class="stretched-link"
                               href="{{ entry_comment_create_url(comment) }}#add-comment"
                               data-action="subject#getForm">{{ 'reply'|trans }}</a>
                        </li>
                        <li>
                            {{ component('boost', {subject: comment}) }}
                        </li>
                        {% if app.user is defined and app.user is not same as null %}
                            {{ component('bookmark_standard', { subject: comment }) }}
                        {% endif %}
                        {% include 'entry/comment/_menu.html.twig' %}
                        <li data-subject-target="loader" style="display:none">
                            <div class="loader" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </li>
                    </menu>
                {% elseif(comment.visibility is same as 'trashed' and this.canSeeTrashed) %}
                    <menu>
                        <li>
                            <form method="post"
                                  action="{{ path('entry_comment_restore', {magazine_name: comment.magazine.name, entry_id: comment.entry.id, comment_id: comment.id}) }}"
                                  data-action="confirmation#ask" data-confirmation-message-param="{{ 'are_you_sure'|trans }}">
                                <input type="hidden" name="token" value="{{ csrf_token('entry_comment_restore') }}">
                                <button type="submit">{{ 'restore'|trans }}</button>
                            </form>
                        </li>
                        <li data-subject-target="loader" style="display:none">
                            <div class="loader" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </li>
                    </menu>
                {% else %}
                    <menu>
                        <li data-subject-target="loader" style="display:none">
                            <div class="loader" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </li>
                    </menu>
                {% endif %}
                <div data-subject-target="container" class="js-container">
                </div>
            </footer>
        </blockquote>
    {% endif %}
    {% if showNested %}
        {{ component('entry_comments_nested', {
            comment: comment,
            level: level,
            showNested: true,
            view: VIEW_STYLE
        }) }}
    {% endif %}
{% endif %}
