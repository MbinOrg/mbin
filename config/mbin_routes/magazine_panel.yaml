magazine_panel_bans:
  controller: App\Controller\Magazine\Panel\MagazineBanController::bans
  path: /m/{name}/panel/bans
  methods: [ GET, POST ]

magazine_panel_ban:
  controller: App\Controller\Magazine\Panel\MagazineBanController::ban
  defaults: { username: ~ }
  path: /m/{name}/panel/ban/{username}
  methods: [ GET, POST ]

magazine_panel_unban:
  controller: App\Controller\Magazine\Panel\MagazineBanController::unban
  path: /m/{name}/panel/unban/{username}
  methods: [ POST ]

magazine_panel_general:
  controller: App\Controller\Magazine\Panel\MagazineEditController
  path: /m/{name}/panel/general
  methods: [ GET, POST ]

magazine_panel_moderators:
  controller: App\Controller\Magazine\Panel\MagazineModeratorController::moderators
  path: /m/{name}/panel/moderators
  methods: [ GET, POST ]

magazine_panel_moderator_purge:
  controller: App\Controller\Magazine\Panel\MagazineModeratorController::remove
  path: /m/{magazine_name}/panel/{moderator_id}/purge
  methods: [ POST ]

magazine_panel_reports:
  controller: App\Controller\Magazine\Panel\MagazineReportController::reports
  path: /m/{name}/panel/reports/{status}
  defaults: { status: !php/const \App\Entity\Report::STATUS_ANY }
  methods: [ GET ]

magazine_panel_report_approve:
  controller: App\Controller\Magazine\Panel\MagazineReportController::reportApprove
  path: /m/{magazine_name}/panel/reports/{report_id}/approve
  methods: [ POST ]

magazine_panel_report_reject:
  controller: App\Controller\Magazine\Panel\MagazineReportController::reportReject
  path: /m/{magazine_name}/panel/reports/{report_id}/reject
  methods: [ POST ]

magazine_panel_theme:
  controller: App\Controller\Magazine\Panel\MagazineThemeController
  path: /m/{name}/panel/appearance
  methods: [ GET, POST ]

magazine_panel_badges:
  controller: App\Controller\Magazine\Panel\MagazineBadgeController::badges
  path: /m/{name}/panel/badges
  methods: [ GET, POST ]

magazine_panel_badge_remove:
  controller: App\Controller\Magazine\Panel\MagazineBadgeController::remove
  path: /m/{magazine_name}/panel/badges/{badge_id}/purge
  methods: [ POST ]

magazine_panel_tags:
  controller: App\Controller\Magazine\Panel\MagazineTagController
  path: /m/{name}/panel/tags
  methods: [ GET, POST ]

magazine_panel_trash:
  controller: App\Controller\Magazine\Panel\MagazineTrashController
  path: /m/{name}/panel/trash
  methods: [ GET ]

magazine_panel_stats:
  controller: App\Controller\Magazine\Panel\MagazineStatsController
  defaults: { statsType: content, statsPeriod: 31, withFederated: false }
  path: /m/{name}/panel/stats/{statsType}/{statsPeriod}/{withFederated}
  methods: [ GET ]

magazine_panel_moderator_requests:
  controller: App\Controller\Magazine\Panel\MagazineModeratorRequestsController::requests
  path: /m/{name}/panel/moderator_requests
  methods: [ GET ]

magazine_panel_moderator_request_accept:
  controller: App\Controller\Magazine\Panel\MagazineModeratorRequestsController::accept
  path: /m/{name}/moderator_requests/{username}/accept
  methods: [ POST ]

magazine_panel_moderator_request_reject:
  controller: App\Controller\Magazine\Panel\MagazineModeratorRequestsController::reject
  path: /m/{name}/panel/moderator_requests/{username}/reject
  methods: [ POST ]

