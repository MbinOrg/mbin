services:
    php:
        image: ${IMAGES_PREFIX:-}app-php
        restart: unless-stopped
        env_file: .env
        environment:
            MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
            MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
            # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
            MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
            MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}:${HTTPS_PORT:-443}/.well-known/mercure}
            MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
        volumes:
            - caddy_data:/data
            - caddy_config:/config
        ports:
            - 80:80
            - 443:443
            - 443:443/udp
        depends_on:
            - postgres
            - redis
            - rabbitmq

    postgres:
        image: postgres:${POSTGRES_VERSION}-alpine
        restart: unless-stopped
        env_file: .env
        volumes:
            - postgres_data:/var/lib/postgresql/data

    rabbitmq:
        image: rabbitmq:3-management-alpine
        restart: unless-stopped
        env_file: .env
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        ports:
            - 15672:15672

    redis:
        image: redis:alpine
        restart: unless-stopped
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis_data:/data
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']

volumes:
    caddy_data:
    caddy_config:
    postgres_data:
    rabbitmq_data:
    redis_data:
