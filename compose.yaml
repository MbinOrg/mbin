services:
    php:
        image: ghcr.io/mbinorg/mbin:latest
        build:
            dockerfile: docker/Dockerfile
            context: .
            target: prod
        restart: unless-stopped
        env_file: .env
        environment:
            MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_SECRET}
            MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_SECRET}
        volumes:
            - ./storage/caddy_config:/config
            - ./storage/caddy_data:/data
            - ./storage/media:/app/public/media
            - ./storage/oauth:/app/config/oauth2
            - ./storage/php_logs:/app/var/log
        ports:
            - 80:80
            - 443:443
            - 443:443/udp
        depends_on:
            - postgres
            - rabbitmq
            - valkey

    messenger:
        image: ghcr.io/mbinorg/mbin:latest
        build:
            dockerfile: docker/Dockerfile
            context: .
            target: prod
        restart: unless-stopped
        command: bin/console messenger:consume scheduler_default old async outbox deliver inbox resolve receive failed --time-limit=3600
        healthcheck:
            test: ['CMD-SHELL', "ps aux | grep 'messenger[:]consume' || exit 1"]
        env_file: .env
        volumes:
            - ./storage/media:/app/public/media
            - ./storage/messenger_logs:/app/var/log
        depends_on:
            - postgres
            - rabbitmq
            - valkey
        deploy:
            mode: replicated
            replicas: 6

    postgres:
        image: postgres:${POSTGRES_VERSION}-bookworm
        restart: unless-stopped
        user: ${MBIN_USER}
        healthcheck:
            test: ['CMD', 'pg_isready']
        env_file: .env
        volumes:
            - ./storage/postgres:/var/lib/postgresql/data

    rabbitmq:
        image: rabbitmq:3-management-alpine
        restart: unless-stopped
        user: ${MBIN_USER}
        healthcheck:
            test: ['CMD', 'rabbitmq-diagnostics', '-q', 'ping']
        env_file: .env
        volumes:
            - ./storage/rabbitmq_data:/var/lib/rabbitmq
            - ./storage/rabbitmq_logs:/var/log/rabbitmq
        ports:
            - 15672:15672
        # Hostname specified to ensure persistent data: https://stackoverflow.com/questions/41330514
        hostname: rabbitmq

    valkey:
        image: valkey/valkey:bookworm
        restart: unless-stopped
        user: ${MBIN_USER}
        command: valkey-server /valkey.conf --requirepass ${VALKEY_PASSWORD}
        healthcheck:
            test: ['CMD', 'valkey-cli', 'ping']
        volumes:
            - ./docker/valkey.conf:/valkey.conf
